# INFO: This file is only for testing the nginx reverse proxy, not for actual development
version: "3"

services:
  mongo1:
    container_name: mongo1
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - "test_mongo1_data:/data/db"
      - "test_mongo1_config:/data/configdb"
      - "./replica.key:/data/replica.key"
    environment:
      - MONGO_INITDB_DATABASE=maharajamart
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME:?error}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD:?error}
      - MONGO_REPLICA_SET_NAME=rs0
      - MONGODB_ADVERTISED_HOSTNAME=127.0.0.1
    command:
      [
        "--replSet",
        "rs0",
        "--bind_ip_all",
        "--port",
        "27017",
        "--keyFile",
        "/data/replica.key",
      ]
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: always
    networks:
      - db
      - private
  mongo2:
    container_name: mongo2
    image: mongo
    ports:
      - "27018:27018"
    volumes:
      - "test_mongo2_data:/data/db"
      - "test_mongo2_config:/data/configdb"
      - "./replica.key:/data/replica.key"
    environment:
      - MONGO_INITDB_DATABASE=maharajamart
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME:?error}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD:?error}
      - MONGO_REPLICA_SET_NAME=rs0
      - MONGODB_ADVERTISED_HOSTNAME=127.0.0.1
    command:
      [
        "--replSet",
        "rs0",
        "--bind_ip_all",
        "--port",
        "27018",
        "--keyFile",
        "/data/replica.key",
      ]
    restart: always
    networks:
      - db
      - private
  mongo3:
    container_name: mongo3
    image: mongo
    ports:
      - "27019:27019"
    volumes:
      - "test_mongo3_data:/data/db"
      - "test_mongo3_config:/data/configdb"
      - "./replica.key:/data/replica.key"
    environment:
      - MONGO_INITDB_DATABASE=maharajamart
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME:?error}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD:?error}
      - MONGO_REPLICA_SET_NAME=rs0
      - MONGODB_ADVERTISED_HOSTNAME=127.0.0.1
    command:
      [
        "--replSet",
        "rs0",
        "--bind_ip_all",
        "--port",
        "27019",
        "--keyFile",
        "/data/replica.key",
      ]
    restart: always
    networks:
      - db
      - private
  mongodb-init:
    image: mongo
    container_name: mongodb-init
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    command: bash -c "chmod +x init-replica-set.sh && ./init-replica-set.sh"
    volumes:
      - "./init-replica-set.sh:/init-replica-set.sh"
      - "./.env:/.env"
    restart: "no" # WHY IN THE WORLD IS THIS SUPPOSED TO BE A STRING????? EVERY OTHER VALUE ISN'T
    networks:
      - db
  app:
    container_name: nextjs
    build:
      context: .
      args:
        - DOCKER_ENV=test
    ports:
      - "3000:3000"
    depends_on:
      - mongodb-init
      - mongo1
      - mongo2
      - mongo3
    restart: always
    environment:
      - NODE_ENV=test
    env_file: .env.test.local
    networks:
      - web
      - private
  nginx:
    image: nginx:latest
    container_name: nginx
    build:
      context: ./nginx/
      dockerfile: Dockerfile.test
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/ssl/:/etc/nginx/ssl:ro # self signed certificate and key from openssl FOR DEVELOPMENT ONLY
    restart: always
    networks:
      - web

volumes:
  test_mongo1_data:
  test_mongo2_data:
  test_mongo3_data:
  test_mongo1_config:
  test_mongo2_config:
  test_mongo3_config:

networks:
  private:
    driver: bridge
    internal: true
  db: # additional private network without app container
    driver: bridge
    internal: true
  web:
    external: true
